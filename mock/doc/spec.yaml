---
#在线yaml转换http://nodeca.github.io/js-yaml/
参考: http://www.ruanyifeng.com/blog/2016/07/yaml.html?f=tt

基本语法规则:
 - 大小写敏感
 - 使用缩进表示层级关系
 - 缩进时不允许使用Tab键，只允许使用空格
 - 缩进的空格数目不重要，只要相同层级的元素左侧对齐即可
 - -号后面一定要加空格区分，不然就会被认为是字符串了
 - '#号表示注释, 这里用''来转意#，不加的话只会显示null, 单引号转意，双引号不转意'
 - ---表示文档开始，可以没有，有时只能在最前面
 - "& 定义一个引用"
 - "* 使用一个引用"
 - "<<: 将引用的内容合并到当前数据，相当于_.extends(a, b)"
 - "!! 表明数据类型，实际上是定义转换后的数据类型，从JSON上可以看出来,最明显的是pairs与map
 对于纯量，使用!!转意时值要跟有后面，不能换行，如!!str true会变成 'true'"
 - 三种数据类型:
     - 键值对 如map, omap
     - 数组 如pairs, seq
     - 纯量
         - 字符串
         - 布尔
         - 整数
         - 浮点数
         - Null
         - 时间
         - 日期
 - 对于键值对，值可以放在下一行，也可以跟在: 号后面, 如果有多层则一定要放在下一行

#字典，由键: 值组成，:号后面要加个空格
person: &person    # &定义一个引用
  name: moon
  age: 21
  sex: boy

# -表示数组
persons:
  - name: sky
  - name: moon
  - name: park
  - *person		# *来使用一个引用

map: !!map		# !!表明类型,强制类型转换
  name: animal
  <<: *person   # <<: 表示合并到当前数据，直接将引用的key,value作为其属性及值

omap: !!omap		#omap表示有序数组
 - ab: ab
 - aa: aa
 - ac: ac

pairs: !!pairs	#转成pairs，相当于表示其类型为pairs
 - a: a
 - b: b

arr:
 - a
 - b

scalars: #纯量
  str: string
  isTrue: true
  isStrTrue: !!str true
  int: 1
  float: 1.1
  date: 1976-07-31
  null:			#用~表示null，什么也不加其实也是null
    ~
  str1: '单引号\n, 单引号转意'
  str2: "双引号\n，双引号不转意"
  multiple:
    a
    b
  multiple1: >    # > 保留最后的换行符
    a
    b
    c
  multiple2: |   # | 保留换行符
    a
    b
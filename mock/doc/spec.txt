{ '参考': 'http://www.ruanyifeng.com/blog/2016/07/yaml.html?f=tt',
  '基本语法规则':
  [ '大小写敏感',
    '使用缩进表示层级关系',
    '缩进时不允许使用Tab键，只允许使用空格',
    '缩进的空格数目不重要，只要相同层级的元素左侧对齐即可',
    '-号后面一定要加空格区分，不然就会被认为是字符串了',
    '#号表示注释, 这里用\'来转意#，不加的话只会显示null, 单引号转意，双引号不转意',
    '---表示文档开始，可以没有，有时只能在最前面',
    '& 定义一个引用',
    '* 使用一个引用',
    '<<: 将引用的内容合并到当前数据，相当于_.extends(a, b)',
    '!! 表明数据类型，实际上是定义转换后的数据类型，从JSON上可以看出来,最明显的是pairs与map 对于纯量，使用!!转意时值要跟有后面，不能换行，如!!str true会变成 \'true\'',
    { '三种数据类型':
    [ '键值对 如map, omap',
      '数组 如pairs, seq',
      '纯量 - 字符串 - 布尔 - 整数 - 浮点数 - Null - 时间 - 日期' ] },
    { '对于键值对，值可以放在下一行，也可以跟在': '号后面, 如果有多层则一定要放在下一行' } ],
  person: { name: 'moon', age: 21, sex: 'boy' },
  persons:
  [ { name: 'sky' },
    { name: 'moon' },
    { name: 'park' },
    { name: 'moon', age: 21, sex: 'boy' } ],
  map: { name: 'animal', age: 21, sex: 'boy' },
  omap: [ { ab: 'ab' }, { aa: 'aa' }, { ac: 'ac' } ],
  pairs: [ [ 'a', 'a' ], [ 'b', 'b' ] ],
  arr: [ 'a', 'b' ],
  scalars:
  { str: 'string',
    isTrue: true,
    isStrTrue: 'true',
    int: 1,
    float: 1.1,
    date: Sat Jul 31 1976 08:00:00 GMT+0800 (CST),
    null: null,
    str1: '单引号\\n, 单引号转意',
    str2: '双引号\n，双引号不转意',
    multiple: 'a b',
    multiple1: 'a b c\n',
    multiple2: 'a\nb\n' } }